START ::= Function
Function ::= Decl '{' {Statement} '}'
Decl ::= Name varStatement '=>' (var | varStatement)
Name ::= ALPHANUMS
varStatement ::= '(' var {',' var} ')'
Statement ::= (if | Loop | '{' {Statement}'}' | Assignment) NEWLINE
if ::= valstate '->' statement
Assignment ::= valState '=>' var
Loop ::= loopname Statement
loopname ::= 'W' | 'W1' '(' arith ')' '=>' var
var ::= ('R'|'V'|'Z') NUMS indexType {indexType} | indexvar
indexType ::= '[' [arith] ':' type ']'
indexvar ::= LOWERCHAR {LOWERCHAR}
type ::= {indexvar '*'} ('i'|'b'|'f'|'c'|'X'[NUM])
value ::= NUM | var | '\t'| '\f' | '(' valstate ')'
valstate ::= (arith [('<'|'>'|'=') arith] | '!' valState)
arith ::= arithp
arithp ::= aritht {('+'|'-') aritht}
aritht ::= value {('*'|'/') value}
